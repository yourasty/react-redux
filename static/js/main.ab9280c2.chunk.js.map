{"version":3,"sources":["components/EpInfo.js","components/Show.js","components/Season.js","Actions.js","components/EpList.js","App.js","reducers/show.js","reducers/episodes.js","index.js","reducers/episode.js","reducers/season.js"],"names":["EpInfo","episodes","useSelector","state","data","episode","className","to","src","image","original","alt","name","season","number","dangerouslySetInnerHTML","__html","DOMPurify","sanitize","summary","Show","show","Season","dispatch","useDispatch","seasons","Object","keys","length","options","i","push","onClick","type","payload","EpList","loaded","err","error","forEach","key","App","exact","path","component","initialState","reducers","combineReducers","action","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","createPromise","thunk","store","createStore","id","fetch","then","response","json","initial","getEpisodes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab9280c2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DOMPurify from \"dompurify\";\r\n\r\nexport default function EpInfo() {\r\n  const episodes = useSelector((state) => state.episodes.data);\r\n  const episode = useSelector((state) => state.episode);\r\n  if (episodes)\r\n    return (\r\n      <div className=\"epinfo\">\r\n        <div className=\"back_button\">\r\n          <Link to=\"/\" className=\"back_link\">\r\n            BACK\r\n          </Link>\r\n        </div>\r\n        <div className=\"epinfo_img_div\">\r\n          <div className=\"epinfo_img_shadow\">\r\n            <img\r\n              className=\"epinfo_img\"\r\n              src={episodes[episode].image.original}\r\n              alt={episodes[episode].image.name}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"epinfo_desc_title\">\r\n          <h3>\r\n            S{episodes[episode].season}E{episodes[episode].number}{\" \"}\r\n            {episodes[episode].name}\r\n          </h3>\r\n        </div>\r\n        <div className=\"epinfo_desc\">\r\n          <p\r\n            dangerouslySetInnerHTML={{\r\n              __html: DOMPurify.sanitize(episodes[episode].summary),\r\n            }}\r\n          ></p>\r\n        </div>\r\n      </div>\r\n    );\r\n  else return <div className=\"EpInfo\">loading...</div>;\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DOMPurify from \"dompurify\";\r\nexport default function Show() {\r\n  const show = useSelector((state) => state.show.data);\r\n\r\n  return (\r\n    <div className=\"show\">\r\n      <div className=\"show_img_div\">\r\n        <img\r\n          className=\"show_img\"\r\n          src={show.image.original}\r\n          alt={show.image.name}\r\n        />\r\n      </div>\r\n      <div className=\"show_desc\">\r\n        <h1 className=\"title\">{show.name}</h1>\r\n        <p\r\n          dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(show.summary) }}\r\n        ></p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { season } from \"../Actions\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Season() {\r\n  const dispatch = useDispatch();\r\n  const episodes = useSelector((state) => state.episodes.data);\r\n  if (episodes) {\r\n    //get number of seasons\r\n    const seasons = episodes[Object.keys(episodes).length - 1].season;\r\n\r\n    let options = [];\r\n    //create season list\r\n    for (let i = 1; i <= seasons; i++) {\r\n      options.push(\r\n        <Link\r\n          className=\"season_button\"\r\n          to=\"/\"\r\n          onClick={() => dispatch(season(i))}\r\n        >\r\n          <div>Season {i}</div>\r\n        </Link>\r\n      );\r\n    }\r\n\r\n    return <div className=\"season\">{options}</div>;\r\n  } else {\r\n    return <div className=\"season\">loading...</div>;\r\n  }\r\n}\r\n","export const initial = (id = 1) => {\r\n  return {\r\n    type: \"FETCH_SHOW\",\r\n    payload: fetch(`https://api.tvmaze.com/shows/${id}`).then((response) =>\r\n      response.json()\r\n    ),\r\n  };\r\n};\r\n\r\nexport const episode = (data) => {\r\n  return {\r\n    type: \"UPDATE_EPISODE\",\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const season = (data) => {\r\n  return {\r\n    type: \"UPDATE_SEASON\",\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getEpisodes = (id = 1) => {\r\n  return {\r\n    type: \"FETCH_EPISODES\",\r\n    payload: fetch(`https://api.tvmaze.com/shows/${id}/episodes`).then(\r\n      (response) => response.json()\r\n    ),\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { episode } from \"../Actions\";\r\n\r\nexport default function EpList() {\r\n  const data = useSelector((state) => state.episodes);\r\n  const season = useSelector((state) => state.season);\r\n  const episodes = data.data;\r\n  const loaded = data.loaded;\r\n  const err = data.error;\r\n  const dispatch = useDispatch();\r\n\r\n  let options = [];\r\n  if (loaded)\r\n    // episode list according to selected season\r\n    Object.keys(episodes).forEach((key) => {\r\n      if (episodes[key].season === season)\r\n        options.push(\r\n          <li key={key} className=\"eplist_item\">\r\n            <Link to={\"/episode\"} onClick={() => dispatch(episode(key))}>\r\n              Episode {episodes[key].number} : {episodes[key].name}\r\n            </Link>\r\n          </li>\r\n        );\r\n    });\r\n  else options = err ? \"error, try refreshing\" : \"loading...\";\r\n\r\n  return (\r\n    <div className=\"eplist\">\r\n      <ul className=\"eplist_ul\">{options}</ul>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport EpInfo from \"./components/EpInfo\";\r\nimport Show from \"./components/Show\";\r\nimport Season from \"./components/Season\";\r\nimport \"./App.scss\";\r\nimport EpList from \"./components/EpList\";\r\n\r\nfunction App() {\r\n  const loaded = useSelector((state) => state.show.loaded);\r\n  const err = useSelector((state) => state.show.error);\r\n  if (loaded)\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Show}></Route>\r\n          <Route path=\"/episode\" component={EpInfo}></Route>\r\n        </Switch>\r\n        <Season />\r\n        <EpList />\r\n      </Router>\r\n    );\r\n  else {\r\n    return (\r\n      <div className=\"App\">{err ? \"error, try refreshing\" : \"loading...\"}</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const initialState = {\r\n  loaded: false,\r\n  error: false,\r\n  data: {},\r\n};\r\n\r\nexport default function show(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"FETCH_SHOW_FULFILLED\": {\r\n      return { loaded: true, data: action.payload };\r\n    }\r\n    case \"FETCH_SHOW_PENDING\": {\r\n      return { loaded: false };\r\n    }\r\n    case \"FETCH_SHOW_REJECTED\": {\r\n      return { error: true };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","const initialState = {\r\n  loaded: false,\r\n  error: false,\r\n  data: {},\r\n};\r\n\r\nexport default function episodes(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"FETCH_EPISODES_FULFILLED\": {\r\n      return { loaded: true, data: action.payload };\r\n    }\r\n    case \"FETCH_EPISODES_PENDING\": {\r\n      return { loaded: false };\r\n    }\r\n    case \"FETCH_EPISODES_REJECTED\": {\r\n      return { error: true };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport show from \"./reducers/show\";\r\nimport episode from \"./reducers/episode\";\r\nimport episodes from \"./reducers/episodes\";\r\nimport season from \"./reducers/season\";\r\nimport { initial, getEpisodes } from \"./Actions\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createPromise } from \"redux-promise-middleware\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst reducers = combineReducers({\r\n  show,\r\n  episode,\r\n  episodes,\r\n  season,\r\n});\r\n\r\nconst composeEnhancers =\r\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n      })\r\n    : compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(createPromise(), thunk));\r\nconst store = createStore(reducers, enhancer);\r\n\r\nlet show_id = 1955; //id of the show to display by default\r\n\r\nstore.dispatch(initial(show_id));\r\nstore.dispatch(getEpisodes(show_id));\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <div className=\"shadow\">\r\n        <App />\r\n      </div>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","export default function episode(state = 0, action) {\r\n  switch (action.type) {\r\n    case \"UPDATE_EPISODE\": {\r\n      return action.payload;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","export default function season(state = 1, action) {\r\n  switch (action.type) {\r\n    case \"UPDATE_SEASON\": {\r\n      return action.payload;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}